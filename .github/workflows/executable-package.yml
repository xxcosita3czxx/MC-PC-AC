name: Executable package

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Install dependencies
        uses: knicknic/os-specific-run@v1.0.3
        with:
          linux: |
            pip install --upgrade pip
            pip install -r non-GUI/reqs.txt
            pip install pyinstaller
          windows: |
            pip install --upgrade pip
            pip install -r non-GUI/reqs.txt
            pip install nuitka zstandard
      - name: Building files
        uses: knicknic/os-specific-run@v1.0.3
        with:
          linux: pyinstaller --onefile --distpath=mc-pc-ac.dist/ --add-data=non-GUI/mcpcasconfig.py:mcpcacconfig.py -n=mc-pc-ac-${{ matrix.os }}-${{ matrix.python-version }} non-GUI/mc-pc-ac.py
          windows: python -m nuitka  --product-name=mc-pc-ac --file-description="Minecraft Computer Antivirus" --disable-console --onefile --assume-yes-for-downloads --output-filename=mc-pc-ac-${{ matrix.os }}-${{ matrix.python-version }} --include-data-files=non-GUI/mcpcacconfig.py=mcpcacconfig.py non-GUI/mc-pc-ac.py
      - name: Upload Builds as artefact
        uses: actions/upload-artifact@v3
        with:
          name: mc-pc-ac-${{ matrix.os }}-${{ matrix.python-version }}
          path: mc-pc-ac.dist/
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
