name: Executable package

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r non-GUI/reqs.txt
      - name: Building files
        uses: knicknic/os-specific-run@v1.0.3
        with:
          linux: pyinstaller --onefile --add-data=non-GUI/mcpcacconfig.py:mcpcacconfig.py -n=mc-pc-ac-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }} non-GUI/mc-pc-ac.py
          windows: pyinstaller --onefile --add-data="non-GUI/mcpcacconfig.py;mcpcacconfig.py" -n=mc-pc-ac-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }} non-GUI/mc-pc-ac.py
      - name: Upload Builds as artefact
        uses: actions/upload-artifact@v3
        with:
          name: mc-pc-ac-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
          path: dist/
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
